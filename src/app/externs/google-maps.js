/**********************************************************************
 * Extern for google
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var google = {
  "maps": {
    "Animation": {
      "BOUNCE": {},
      "DROP": {},
      "Eo": {},
      "Jo": {}
    },
    "BicyclingLayer": {
      "Cb": {
        "addListener": function () {},
        "bindTo": function () {},
        "changed": function () {},
        "get": function () {},
        "notify": function () {},
        "set": function () {},
        "setOptions": function () {},
        "setValues": function () {},
        "unbind": function () {},
        "unbindAll": function () {}
      },
      "pf": function () {}
    },
    "Circle": {
      "Cb": {
        "addListener": function () {},
        "bindTo": function () {},
        "changed": function () {},
        "get": function () {},
        "notify": function () {},
        "set": function () {},
        "setOptions": function () {},
        "setValues": function () {},
        "unbind": function () {},
        "unbindAll": function () {}
      },
      "pf": function () {}
    },
    "ControlPosition": {
      "BOTTOM": {},
      "BOTTOM_CENTER": {},
      "BOTTOM_LEFT": {},
      "BOTTOM_RIGHT": {},
      "CENTER": {},
      "LEFT": {},
      "LEFT_BOTTOM": {},
      "LEFT_CENTER": {},
      "LEFT_TOP": {},
      "RIGHT": {},
      "RIGHT_BOTTOM": {},
      "RIGHT_CENTER": {},
      "RIGHT_TOP": {},
      "TOP": {},
      "TOP_CENTER": {},
      "TOP_LEFT": {},
      "TOP_RIGHT": {}
    },
    "Data": {
      "Cb": {
        "addListener": function () {},
        "bindTo": function () {},
        "changed": function () {},
        "get": function () {},
        "notify": function () {},
        "set": function () {},
        "setOptions": function () {},
        "setValues": function () {},
        "unbind": function () {},
        "unbindAll": function () {}
      },
      "Feature": function () {},
      "Geometry": function () {},
      "GeometryCollection": {
        "Cb": {},
        "pf": function () {}
      },
      "LineString": {
        "Cb": {},
        "pf": function () {}
      },
      "LinearRing": {
        "Cb": {},
        "pf": function () {}
      },
      "MultiLineString": {
        "Cb": {},
        "pf": function () {}
      },
      "MultiPoint": {
        "Cb": {},
        "pf": function () {}
      },
      "MultiPolygon": {
        "Cb": {},
        "pf": function () {}
      },
      "Point": {
        "Cb": {},
        "pf": function () {}
      },
      "Polygon": {
        "Cb": {},
        "pf": function () {}
      },
      "pf": function () {}
    },
    "DirectionsRenderer": {
      "Cb": {
        "addListener": function () {},
        "bindTo": function () {},
        "changed": function () {},
        "get": function () {},
        "notify": function () {},
        "set": function () {},
        "setOptions": function () {},
        "setValues": function () {},
        "unbind": function () {},
        "unbindAll": function () {}
      },
      "pf": function () {}
    },
    "DirectionsService": function () {},
    "DirectionsStatus": {
      "INVALID_REQUEST": {},
      "MAX_WAYPOINTS_EXCEEDED": {},
      "NOT_FOUND": {},
      "OK": {},
      "OVER_QUERY_LIMIT": {},
      "REQUEST_DENIED": {},
      "UNKNOWN_ERROR": {},
      "ZERO_RESULTS": {}
    },
    "DirectionsTravelMode": {
      "BICYCLING": {},
      "DRIVING": {},
      "TRANSIT": {},
      "WALKING": {}
    },
    "DirectionsUnitSystem": {
      "IMPERIAL": {},
      "METRIC": {}
    },
    "DistanceMatrixElementStatus": {
      "NOT_FOUND": {},
      "OK": {},
      "ZERO_RESULTS": {}
    },
    "DistanceMatrixService": function () {},
    "DistanceMatrixStatus": {
      "INVALID_REQUEST": {},
      "MAX_DIMENSIONS_EXCEEDED": {},
      "MAX_ELEMENTS_EXCEEDED": {},
      "OK": {},
      "OVER_QUERY_LIMIT": {},
      "REQUEST_DENIED": {},
      "UNKNOWN_ERROR": {}
    },
    "ElevationService": function () {},
    "ElevationStatus": {
      "Ao": {},
      "INVALID_REQUEST": {},
      "OK": {},
      "OVER_QUERY_LIMIT": {},
      "REQUEST_DENIED": {},
      "UNKNOWN_ERROR": {}
    },
    "FusionTablesLayer": {
      "Cb": {
        "addListener": function () {},
        "bindTo": function () {},
        "changed": function () {},
        "get": function () {},
        "notify": function () {},
        "set": function () {},
        "setOptions": function () {},
        "setValues": function () {},
        "unbind": function () {},
        "unbindAll": function () {}
      },
      "pf": function () {}
    },
    "Geocoder": function () {},
    "GeocoderLocationType": {
      "APPROXIMATE": {},
      "GEOMETRIC_CENTER": {},
      "RANGE_INTERPOLATED": {},
      "ROOFTOP": {}
    },
    "GeocoderStatus": {
      "ERROR": {},
      "INVALID_REQUEST": {},
      "OK": {},
      "OVER_QUERY_LIMIT": {},
      "REQUEST_DENIED": {},
      "UNKNOWN_ERROR": {},
      "ZERO_RESULTS": {}
    },
    "GroundOverlay": {
      "Cb": {
        "addListener": function () {},
        "bindTo": function () {},
        "changed": function () {},
        "get": function () {},
        "notify": function () {},
        "set": function () {},
        "setOptions": function () {},
        "setValues": function () {},
        "unbind": function () {},
        "unbindAll": function () {}
      },
      "pf": function () {}
    },
    "ImageMapType": {
      "Cb": {
        "addListener": function () {},
        "bindTo": function () {},
        "changed": function () {},
        "get": function () {},
        "notify": function () {},
        "set": function () {},
        "setOptions": function () {},
        "setValues": function () {},
        "unbind": function () {},
        "unbindAll": function () {}
      },
      "pf": function () {}
    },
    "InfoWindow": {
      "Cb": {
        "addListener": function () {},
        "bindTo": function () {},
        "changed": function () {},
        "get": function () {},
        "notify": function () {},
        "set": function () {},
        "setOptions": function () {},
        "setValues": function () {},
        "unbind": function () {},
        "unbindAll": function () {}
      },
      "pf": function () {}
    },
    "KmlLayer": {
      "Cb": {
        "addListener": function () {},
        "bindTo": function () {},
        "changed": function () {},
        "get": function () {},
        "notify": function () {},
        "set": function () {},
        "setOptions": function () {},
        "setValues": function () {},
        "unbind": function () {},
        "unbindAll": function () {}
      },
      "pf": function () {}
    },
    "KmlLayerStatus": {
      "DOCUMENT_NOT_FOUND": {},
      "DOCUMENT_TOO_LARGE": {},
      "FETCH_ERROR": {},
      "INVALID_DOCUMENT": {},
      "INVALID_REQUEST": {},
      "LIMITS_EXCEEDED": {},
      "OK": {},
      "TIMED_OUT": {},
      "UNKNOWN": {}
    },
    "LatLng": function () {},
    "LatLngBounds": function () {},
    "MVCArray": {
      "Cb": {
        "addListener": function () {},
        "bindTo": function () {},
        "changed": function () {},
        "get": function () {},
        "notify": function () {},
        "set": function () {},
        "setOptions": function () {},
        "setValues": function () {},
        "unbind": function () {},
        "unbindAll": function () {}
      },
      "pf": function () {}
    },
    "MVCObject": function () {},
    "Map": {
      "Cb": {
        "addListener": function () {},
        "bindTo": function () {},
        "changed": function () {},
        "constructor": {
          "Cb": {
            "addListener": function () {},
            "bindTo": function () {},
            "changed": function () {},
            "get": function () {},
            "notify": function () {},
            "set": function () {},
            "setOptions": function () {},
            "setValues": function () {},
            "unbind": function () {},
            "unbindAll": function () {}
          },
          "pf": function () {}
        },
        "get": function () {},
        "notify": function () {},
        "set": function () {},
        "setOptions": function () {},
        "setValues": function () {},
        "unbind": function () {},
        "unbindAll": function () {}
      },
      "pf": function () {}
    },
    "MapTypeControlStyle": {
      "DEFAULT": {},
      "DROPDOWN_MENU": {},
      "HORIZONTAL_BAR": {},
      "INSET": {},
      "INSET_LARGE": {}
    },
    "MapTypeId": {
      "HYBRID": {},
      "ROADMAP": {},
      "SATELLITE": {},
      "TERRAIN": {}
    },
    "MapTypeRegistry": {
      "Cb": {
        "addListener": function () {},
        "bindTo": function () {},
        "changed": function () {},
        "get": function () {},
        "notify": function () {},
        "set": function () {},
        "setOptions": function () {},
        "setValues": function () {},
        "unbind": function () {},
        "unbindAll": function () {}
      },
      "pf": function () {}
    },
    "Marker": {
      "Cb": {
        "addListener": function () {},
        "bindTo": function () {},
        "changed": function () {},
        "constructor": {
          "Cb": {
            "addListener": function () {},
            "bindTo": function () {},
            "changed": function () {},
            "get": function () {},
            "notify": function () {},
            "set": function () {},
            "setOptions": function () {},
            "setValues": function () {},
            "unbind": function () {},
            "unbindAll": function () {}
          },
          "pf": function () {}
        },
        "get": function () {},
        "getAnimation": function () {},
        "getAttribution": function () {},
        "getClickable": function () {},
        "getCursor": function () {},
        "getDraggable": function () {},
        "getFlat": function () {},
        "getIcon": function () {},
        "getLabel": function () {},
        "getOpacity": function () {},
        "getPlace": function () {},
        "getPosition": function () {},
        "getShadow": function () {},
        "getShape": function () {},
        "getTitle": function () {},
        "getVisible": function () {},
        "getZIndex": function () {},
        "notify": function () {},
        "set": function () {},
        "setAnimation": function () {},
        "setAttribution": function () {},
        "setClickable": function () {},
        "setCursor": function () {},
        "setDraggable": function () {},
        "setFlat": function () {},
        "setIcon": function () {},
        "setLabel": function () {},
        "setOpacity": function () {},
        "setOptions": function () {},
        "setPlace": function () {},
        "setPosition": function () {},
        "setShadow": function () {},
        "setShape": function () {},
        "setTitle": function () {},
        "setValues": function () {},
        "setVisible": function () {},
        "setZIndex": function () {},
        "unbind": function () {},
        "unbindAll": function () {}
      },
      "MAX_ZINDEX": {},
      "pf": function () {}
    },
    "MarkerImage": function () {},
    "MaxZoomService": function () {},
    "MaxZoomStatus": {
      "ERROR": {},
      "OK": {}
    },
    "NavigationControlStyle": {
      "ANDROID": {},
      "DEFAULT": {},
      "Ko": {},
      "SMALL": {},
      "ZOOM_PAN": {},
      "sk": {}
    },
    "OverlayView": {
      "Cb": {
        "addListener": function () {},
        "bindTo": function () {},
        "changed": function () {},
        "get": function () {},
        "notify": function () {},
        "set": function () {},
        "setOptions": function () {},
        "setValues": function () {},
        "unbind": function () {},
        "unbindAll": function () {}
      },
      "pf": function () {}
    },
    "Point": function () {},
    "Polygon": {
      "Cb": {
        "addListener": function () {},
        "bindTo": function () {},
        "changed": function () {},
        "constructor": {
          "Cb": {
            "addListener": function () {},
            "bindTo": function () {},
            "changed": function () {},
            "get": function () {},
            "notify": function () {},
            "set": function () {},
            "setOptions": function () {},
            "setValues": function () {},
            "unbind": function () {},
            "unbindAll": function () {}
          },
          "pf": function () {}
        },
        "get": function () {},
        "getDraggable": function () {},
        "getEditable": function () {},
        "getMap": function () {},
        "getPath": function () {},
        "getVisible": function () {},
        "map_changed": function () {},
        "notify": function () {},
        "set": function () {},
        "setDraggable": function () {},
        "setEditable": function () {},
        "setMap": function () {},
        "setOptions": function () {},
        "setPath": function () {},
        "setValues": function () {},
        "setVisible": function () {},
        "unbind": function () {},
        "unbindAll": function () {},
        "visible_changed": function () {}
      },
      "pf": function () {}
    },
    "Polyline": {
      "Cb": {
        "addListener": function () {},
        "bindTo": function () {},
        "changed": function () {},
        "constructor": {
          "Cb": {
            "addListener": function () {},
            "bindTo": function () {},
            "changed": function () {},
            "get": function () {},
            "notify": function () {},
            "set": function () {},
            "setOptions": function () {},
            "setValues": function () {},
            "unbind": function () {},
            "unbindAll": function () {}
          },
          "pf": function () {}
        },
        "get": function () {},
        "getDraggable": function () {},
        "getEditable": function () {},
        "getMap": function () {},
        "getPath": function () {},
        "getVisible": function () {},
        "map_changed": function () {},
        "notify": function () {},
        "set": function () {},
        "setDraggable": function () {},
        "setEditable": function () {},
        "setMap": function () {},
        "setOptions": function () {},
        "setPath": function () {},
        "setValues": function () {},
        "setVisible": function () {},
        "unbind": function () {},
        "unbindAll": function () {},
        "visible_changed": function () {}
      },
      "pf": function () {}
    },
    "Rectangle": {
      "Cb": {
        "addListener": function () {},
        "bindTo": function () {},
        "changed": function () {},
        "get": function () {},
        "notify": function () {},
        "set": function () {},
        "setOptions": function () {},
        "setValues": function () {},
        "unbind": function () {},
        "unbindAll": function () {}
      },
      "pf": function () {}
    },
    "SaveWidget": {
      "Cb": {
        "addListener": function () {},
        "bindTo": function () {},
        "changed": function () {},
        "get": function () {},
        "notify": function () {},
        "set": function () {},
        "setOptions": function () {},
        "setValues": function () {},
        "unbind": function () {},
        "unbindAll": function () {}
      },
      "pf": function () {}
    },
    "ScaleControlStyle": {
      "DEFAULT": {}
    },
    "Size": function () {},
    "StreetViewCoverageLayer": {
      "Cb": {
        "addListener": function () {},
        "bindTo": function () {},
        "changed": function () {},
        "get": function () {},
        "notify": function () {},
        "set": function () {},
        "setOptions": function () {},
        "setValues": function () {},
        "unbind": function () {},
        "unbindAll": function () {}
      },
      "pf": function () {}
    },
    "StreetViewPanorama": {
      "Cb": {
        "addListener": function () {},
        "bindTo": function () {},
        "changed": function () {},
        "constructor": {
          "Cb": {
            "addListener": function () {},
            "bindTo": function () {},
            "changed": function () {},
            "get": function () {},
            "notify": function () {},
            "set": function () {},
            "setOptions": function () {},
            "setValues": function () {},
            "unbind": function () {},
            "unbindAll": function () {}
          },
          "pf": function () {}
        },
        "get": function () {},
        "notify": function () {},
        "set": function () {},
        "setOptions": function () {},
        "setValues": function () {},
        "unbind": function () {},
        "unbindAll": function () {}
      },
      "pf": function () {}
    },
    "StreetViewPreference": {
      "BEST": {},
      "NEAREST": {}
    },
    "StreetViewService": function () {},
    "StreetViewSource": {
      "DEFAULT": {},
      "OUTDOOR": {}
    },
    "StreetViewStatus": {
      "OK": {},
      "UNKNOWN_ERROR": {},
      "ZERO_RESULTS": {}
    },
    "StrokePosition": {
      "CENTER": {},
      "INSIDE": {},
      "OUTSIDE": {}
    },
    "StyledMapType": {
      "Cb": {
        "addListener": function () {},
        "bindTo": function () {},
        "changed": function () {},
        "constructor": {
          "Cb": {
            "addListener": function () {},
            "bindTo": function () {},
            "changed": function () {},
            "get": function () {},
            "notify": function () {},
            "set": function () {},
            "setOptions": function () {},
            "setValues": function () {},
            "unbind": function () {},
            "unbindAll": function () {}
          },
          "pf": function () {}
        },
        "get": function () {},
        "getTile": function () {},
        "notify": function () {},
        "set": function () {},
        "setOptions": function () {},
        "setValues": function () {},
        "tileSize": {
          "b": {},
          "ba": function () {},
          "equals": function () {},
          "f": {},
          "height": {},
          "toString": function () {},
          "width": {}
        },
        "triggersTileLoadEvent": {},
        "unbind": function () {},
        "unbindAll": function () {}
      },
      "pf": function () {}
    },
    "SymbolPath": {
      "BACKWARD_CLOSED_ARROW": {},
      "BACKWARD_OPEN_ARROW": {},
      "CIRCLE": {},
      "FORWARD_CLOSED_ARROW": {},
      "FORWARD_OPEN_ARROW": {}
    },
    "TrafficLayer": {
      "Cb": {
        "addListener": function () {},
        "bindTo": function () {},
        "changed": function () {},
        "get": function () {},
        "notify": function () {},
        "set": function () {},
        "setOptions": function () {},
        "setValues": function () {},
        "unbind": function () {},
        "unbindAll": function () {}
      },
      "pf": function () {}
    },
    "TrafficModel": {
      "BEST_GUESS": {},
      "OPTIMISTIC": {},
      "PESSIMISTIC": {}
    },
    "TransitLayer": {
      "Cb": {
        "addListener": function () {},
        "bindTo": function () {},
        "changed": function () {},
        "get": function () {},
        "notify": function () {},
        "set": function () {},
        "setOptions": function () {},
        "setValues": function () {},
        "unbind": function () {},
        "unbindAll": function () {}
      },
      "pf": function () {}
    },
    "TransitMode": {
      "BUS": {},
      "RAIL": {},
      "SUBWAY": {},
      "TRAIN": {},
      "TRAM": {}
    },
    "TransitRoutePreference": {
      "FEWER_TRANSFERS": {},
      "LESS_WALKING": {}
    },
    "TravelMode": {
      "BICYCLING": {},
      "DRIVING": {},
      "TRANSIT": {},
      "WALKING": {}
    },
    "UnitSystem": {
      "IMPERIAL": {},
      "METRIC": {}
    },
    "ZoomControlStyle": {
      "DEFAULT": {},
      "LARGE": {},
      "SMALL": {},
      "sk": {}
    },
    "__gjsload__": function () {},
    "event": {
      "addDomListener": function () {},
      "addDomListenerOnce": function () {},
      "addListener": function () {},
      "addListenerOnce": function () {},
      "bind": function () {},
      "clearInstanceListeners": function () {},
      "clearListeners": function () {},
      "forward": function () {},
      "hasListeners": function () {},
      "ia": function () {},
      "ib": function () {},
      "removeListener": function () {},
      "trigger": function () {}
    },
    "version": {}
  }
};
google.maps.BicyclingLayer.prototype = {
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "constructor": function () {},
  "get": function () {},
  "getMap": function () {},
  "notify": function () {},
  "set": function () {},
  "setMap": function () {},
  "setOptions": function () {},
  "setValues": function () {},
  "unbind": function () {},
  "unbindAll": function () {}
};
google.maps.Circle.prototype = {
  "addListener": function () {},
  "bindTo": function () {},
  "center_changed": function () {},
  "changed": function () {},
  "constructor": function () {},
  "get": function () {},
  "getBounds": function () {},
  "getCenter": function () {},
  "getDraggable": function () {},
  "getEditable": function () {},
  "getMap": function () {},
  "getRadius": function () {},
  "getVisible": function () {},
  "map_changed": function () {},
  "notify": function () {},
  "radius_changed": function () {},
  "set": function () {},
  "setCenter": function () {},
  "setDraggable": function () {},
  "setEditable": function () {},
  "setMap": function () {},
  "setOptions": function () {},
  "setRadius": function () {},
  "setValues": function () {},
  "setVisible": function () {},
  "unbind": function () {},
  "unbindAll": function () {},
  "visible_changed": function () {}
};
google.maps.Data.prototype = {
  "add": function () {},
  "addGeoJson": function () {},
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "constructor": function () {},
  "contains": function () {},
  "controls_changed": function () {},
  "drawingMode_changed": function () {},
  "forEach": function () {},
  "get": function () {},
  "getControlPosition": function () {},
  "getControls": function () {},
  "getDrawingMode": function () {},
  "getFeatureById": function () {},
  "getMap": function () {},
  "getStyle": function () {},
  "loadGeoJson": function () {},
  "notify": function () {},
  "overrideStyle": function () {},
  "remove": function () {},
  "revertStyle": function () {},
  "set": function () {},
  "setControlPosition": function () {},
  "setControls": function () {},
  "setDrawingMode": function () {},
  "setMap": function () {},
  "setOptions": function () {},
  "setStyle": function () {},
  "setValues": function () {},
  "toGeoJson": function () {},
  "unbind": function () {},
  "unbindAll": function () {}
};
google.maps.Data.Feature.prototype = {
  "forEachProperty": function () {},
  "getGeometry": function () {},
  "getId": function () {},
  "getProperty": function () {},
  "removeProperty": function () {},
  "setGeometry": function () {},
  "setProperty": function () {},
  "toGeoJson": function () {}
};
google.maps.Data.GeometryCollection.prototype = {
  "constructor": function () {},
  "forEachLatLng": function () {},
  "getArray": function () {},
  "getAt": function () {},
  "getLength": function () {},
  "getType": function () {}
};
google.maps.Data.LineString.prototype = {
  "constructor": function () {},
  "forEachLatLng": function () {},
  "getArray": function () {},
  "getAt": function () {},
  "getLength": function () {},
  "getType": function () {}
};
google.maps.Data.LinearRing.prototype = {
  "constructor": function () {},
  "forEachLatLng": function () {},
  "getArray": function () {},
  "getAt": function () {},
  "getLength": function () {},
  "getType": function () {}
};
google.maps.Data.MultiLineString.prototype = {
  "constructor": function () {},
  "forEachLatLng": function () {},
  "getArray": function () {},
  "getAt": function () {},
  "getLength": function () {},
  "getType": function () {}
};
google.maps.Data.MultiPoint.prototype = {
  "constructor": function () {},
  "forEachLatLng": function () {},
  "getArray": function () {},
  "getAt": function () {},
  "getLength": function () {},
  "getType": function () {}
};
google.maps.Data.MultiPolygon.prototype = {
  "constructor": function () {},
  "forEachLatLng": function () {},
  "getArray": function () {},
  "getAt": function () {},
  "getLength": function () {},
  "getType": function () {}
};
google.maps.Data.Point.prototype = {
  "constructor": function () {},
  "forEachLatLng": function () {},
  "get": function () {},
  "getType": function () {}
};
google.maps.Data.Polygon.prototype = {
  "constructor": function () {},
  "forEachLatLng": function () {},
  "getArray": function () {},
  "getAt": function () {},
  "getLength": function () {},
  "getType": function () {}
};
google.maps.DirectionsRenderer.prototype = {
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "constructor": function () {},
  "get": function () {},
  "getDirections": function () {},
  "getMap": function () {},
  "getPanel": function () {},
  "getRouteIndex": function () {},
  "notify": function () {},
  "set": function () {},
  "setDirections": function () {},
  "setMap": function () {},
  "setOptions": function () {},
  "setPanel": function () {},
  "setRouteIndex": function () {},
  "setValues": function () {},
  "unbind": function () {},
  "unbindAll": function () {}
};
google.maps.DirectionsService.prototype = {
  "route": function () {}
};
google.maps.DistanceMatrixService.prototype = {
  "getDistanceMatrix": function () {}
};
google.maps.ElevationService.prototype = {
  "getElevationAlongPath": function () {},
  "getElevationForLocations": function () {}
};
google.maps.FusionTablesLayer.prototype = {
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "constructor": function () {},
  "get": function () {},
  "getMap": function () {},
  "getQuery": function () {},
  "getTableId": function () {},
  "notify": function () {},
  "set": function () {},
  "setMap": function () {},
  "setOptions": function () {},
  "setQuery": function () {},
  "setTableId": function () {},
  "setValues": function () {},
  "unbind": function () {},
  "unbindAll": function () {}
};
google.maps.Geocoder.prototype = {
  "geocode": function () {}
};
google.maps.GroundOverlay.prototype = {
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "constructor": function () {},
  "get": function () {},
  "getBounds": function () {},
  "getMap": function () {},
  "getOpacity": function () {},
  "getUrl": function () {},
  "map_changed": function () {},
  "notify": function () {},
  "set": function () {},
  "setMap": function () {},
  "setOpacity": function () {},
  "setOptions": function () {},
  "setValues": function () {},
  "unbind": function () {},
  "unbindAll": function () {}
};
google.maps.ImageMapType.prototype = {
  "Ef": function () {},
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "constructor": function () {},
  "get": function () {},
  "getOpacity": function () {},
  "getTile": function () {},
  "notify": function () {},
  "opacity_changed": function () {},
  "releaseTile": function () {},
  "set": function () {},
  "setOpacity": function () {},
  "setOptions": function () {},
  "setValues": function () {},
  "triggersTileLoadEvent": function () {},
  "unbind": function () {},
  "unbindAll": function () {}
};
google.maps.InfoWindow.prototype = {
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "close": function () {},
  "constructor": function () {},
  "get": function () {},
  "getAnchor": function () {},
  "getContent": function () {},
  "getMap": function () {},
  "getPosition": function () {},
  "getSize": function () {},
  "getZIndex": function () {},
  "notify": function () {},
  "open": function () {},
  "set": function () {},
  "setAnchor": function () {},
  "setContent": function () {},
  "setMap": function () {},
  "setOptions": function () {},
  "setPosition": function () {},
  "setSize": function () {},
  "setValues": function () {},
  "setZIndex": function () {},
  "unbind": function () {},
  "unbindAll": function () {}
};
google.maps.KmlLayer.prototype = {
  "addListener": function () {},
  "be": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "constructor": function () {},
  "driveFileId_changed": function () {},
  "get": function () {},
  "getDefaultViewport": function () {},
  "getMap": function () {},
  "getMetadata": function () {},
  "getScreenOverlays": function () {},
  "getStatus": function () {},
  "getUrl": function () {},
  "getZIndex": function () {},
  "map_changed": function () {},
  "notify": function () {},
  "set": function () {},
  "setMap": function () {},
  "setOptions": function () {},
  "setScreenOverlays": function () {},
  "setUrl": function () {},
  "setValues": function () {},
  "setZIndex": function () {},
  "unbind": function () {},
  "unbindAll": function () {},
  "url_changed": function () {},
  "zIndex_changed": function () {}
};
google.maps.LatLng.prototype = {
  "ba": function () {},
  "equals": function () {},
  "toJSON": function () {},
  "toString": function () {},
  "toUrlValue": function () {}
};
google.maps.LatLngBounds.prototype = {
  "ba": function () {},
  "contains": function () {},
  "equals": function () {},
  "extend": function () {},
  "getCenter": function () {},
  "getNorthEast": function () {},
  "getSouthWest": function () {},
  "intersects": function () {},
  "isEmpty": function () {},
  "toJSON": function () {},
  "toSpan": function () {},
  "toString": function () {},
  "toUrlValue": function () {},
  "union": function () {}
};
google.maps.MVCArray.prototype = {
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "clear": function () {},
  "constructor": function () {},
  "forEach": function () {},
  "get": function () {},
  "getArray": function () {},
  "getAt": function () {},
  "getLength": function () {},
  "indexOf": function () {},
  "insertAt": function () {},
  "notify": function () {},
  "pop": function () {},
  "push": function () {},
  "removeAt": function () {},
  "set": function () {},
  "setAt": function () {},
  "setOptions": function () {},
  "setValues": function () {},
  "unbind": function () {},
  "unbindAll": function () {}
};
google.maps.MVCObject.prototype = {
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "get": function () {},
  "notify": function () {},
  "set": function () {},
  "setOptions": function () {},
  "setValues": function () {},
  "unbind": function () {},
  "unbindAll": function () {}
};
google.maps.Map.prototype = {
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "constructor": function () {},
  "fitBounds": function () {},
  "get": function () {},
  "getBounds": function () {},
  "getCenter": function () {},
  "getClickableIcons": function () {},
  "getDiv": function () {},
  "getHeading": function () {},
  "getMapTypeId": function () {},
  "getProjection": function () {},
  "getStreetView": function () {},
  "getTilt": function () {},
  "getZoom": function () {},
  "notify": function () {},
  "panBy": function () {},
  "panTo": function () {},
  "panToBounds": function () {},
  "set": function () {},
  "setCenter": function () {},
  "setClickableIcons": function () {},
  "setHeading": function () {},
  "setMapTypeId": function () {},
  "setOptions": function () {},
  "setStreetView": function () {},
  "setTilt": function () {},
  "setValues": function () {},
  "setZoom": function () {},
  "streetView_changed": function () {},
  "unbind": function () {},
  "unbindAll": function () {}
};
google.maps.Map.Cb.constructor.prototype = {
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "constructor": function () {},
  "get": function () {},
  "notify": function () {},
  "set": function () {},
  "setOptions": function () {},
  "setValues": function () {},
  "unbind": function () {},
  "unbindAll": function () {}
};
google.maps.MapTypeRegistry.prototype = {
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "constructor": function () {},
  "get": function () {},
  "notify": function () {},
  "set": function () {},
  "setOptions": function () {},
  "setValues": function () {},
  "unbind": function () {},
  "unbindAll": function () {}
};
google.maps.Marker.prototype = {
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "constructor": function () {},
  "get": function () {},
  "getAnimation": function () {},
  "getAttribution": function () {},
  "getClickable": function () {},
  "getCursor": function () {},
  "getDraggable": function () {},
  "getFlat": function () {},
  "getIcon": function () {},
  "getLabel": function () {},
  "getMap": function () {},
  "getOpacity": function () {},
  "getPlace": function () {},
  "getPosition": function () {},
  "getShadow": function () {},
  "getShape": function () {},
  "getTitle": function () {},
  "getVisible": function () {},
  "getZIndex": function () {},
  "map_changed": function () {},
  "notify": function () {},
  "set": function () {},
  "setAnimation": function () {},
  "setAttribution": function () {},
  "setClickable": function () {},
  "setCursor": function () {},
  "setDraggable": function () {},
  "setFlat": function () {},
  "setIcon": function () {},
  "setLabel": function () {},
  "setMap": function () {},
  "setOpacity": function () {},
  "setOptions": function () {},
  "setPlace": function () {},
  "setPosition": function () {},
  "setShadow": function () {},
  "setShape": function () {},
  "setTitle": function () {},
  "setValues": function () {},
  "setVisible": function () {},
  "setZIndex": function () {},
  "unbind": function () {},
  "unbindAll": function () {}
};
google.maps.Marker.Cb.constructor.prototype = {
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "constructor": function () {},
  "get": function () {},
  "getAnimation": function () {},
  "getAttribution": function () {},
  "getClickable": function () {},
  "getCursor": function () {},
  "getDraggable": function () {},
  "getFlat": function () {},
  "getIcon": function () {},
  "getLabel": function () {},
  "getOpacity": function () {},
  "getPlace": function () {},
  "getPosition": function () {},
  "getShadow": function () {},
  "getShape": function () {},
  "getTitle": function () {},
  "getVisible": function () {},
  "getZIndex": function () {},
  "notify": function () {},
  "set": function () {},
  "setAnimation": function () {},
  "setAttribution": function () {},
  "setClickable": function () {},
  "setCursor": function () {},
  "setDraggable": function () {},
  "setFlat": function () {},
  "setIcon": function () {},
  "setLabel": function () {},
  "setOpacity": function () {},
  "setOptions": function () {},
  "setPlace": function () {},
  "setPosition": function () {},
  "setShadow": function () {},
  "setShape": function () {},
  "setTitle": function () {},
  "setValues": function () {},
  "setVisible": function () {},
  "setZIndex": function () {},
  "unbind": function () {},
  "unbindAll": function () {}
};
google.maps.MaxZoomService.prototype = {
  "getMaxZoomAtLatLng": function () {}
};
google.maps.OverlayView.prototype = {
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "constructor": function () {},
  "get": function () {},
  "getMap": function () {},
  "getPanes": function () {},
  "getProjection": function () {},
  "map_changed": function () {},
  "notify": function () {},
  "set": function () {},
  "setMap": function () {},
  "setOptions": function () {},
  "setValues": function () {},
  "unbind": function () {},
  "unbindAll": function () {}
};
google.maps.Point.prototype = {
  "Ce": function () {},
  "ba": function () {},
  "equals": function () {},
  "round": function () {},
  "toString": function () {}
};
google.maps.Polygon.prototype = {
  "Za": function () {},
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "constructor": function () {},
  "get": function () {},
  "getDraggable": function () {},
  "getEditable": function () {},
  "getMap": function () {},
  "getPath": function () {},
  "getPaths": function () {},
  "getVisible": function () {},
  "map_changed": function () {},
  "notify": function () {},
  "set": function () {},
  "setDraggable": function () {},
  "setEditable": function () {},
  "setMap": function () {},
  "setOptions": function () {},
  "setPath": function () {},
  "setPaths": function () {},
  "setValues": function () {},
  "setVisible": function () {},
  "unbind": function () {},
  "unbindAll": function () {},
  "visible_changed": function () {}
};
google.maps.Polygon.Cb.constructor.prototype = {
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "constructor": function () {},
  "get": function () {},
  "getDraggable": function () {},
  "getEditable": function () {},
  "getMap": function () {},
  "getPath": function () {},
  "getVisible": function () {},
  "map_changed": function () {},
  "notify": function () {},
  "set": function () {},
  "setDraggable": function () {},
  "setEditable": function () {},
  "setMap": function () {},
  "setOptions": function () {},
  "setPath": function () {},
  "setValues": function () {},
  "setVisible": function () {},
  "unbind": function () {},
  "unbindAll": function () {},
  "visible_changed": function () {}
};
google.maps.Polyline.prototype = {
  "Za": function () {},
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "constructor": function () {},
  "get": function () {},
  "getDraggable": function () {},
  "getEditable": function () {},
  "getMap": function () {},
  "getPath": function () {},
  "getVisible": function () {},
  "map_changed": function () {},
  "notify": function () {},
  "set": function () {},
  "setDraggable": function () {},
  "setEditable": function () {},
  "setMap": function () {},
  "setOptions": function () {},
  "setPath": function () {},
  "setValues": function () {},
  "setVisible": function () {},
  "unbind": function () {},
  "unbindAll": function () {},
  "visible_changed": function () {}
};
google.maps.Polyline.Cb.constructor.prototype = {
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "constructor": function () {},
  "get": function () {},
  "getDraggable": function () {},
  "getEditable": function () {},
  "getMap": function () {},
  "getPath": function () {},
  "getVisible": function () {},
  "map_changed": function () {},
  "notify": function () {},
  "set": function () {},
  "setDraggable": function () {},
  "setEditable": function () {},
  "setMap": function () {},
  "setOptions": function () {},
  "setPath": function () {},
  "setValues": function () {},
  "setVisible": function () {},
  "unbind": function () {},
  "unbindAll": function () {},
  "visible_changed": function () {}
};
google.maps.Rectangle.prototype = {
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "constructor": function () {},
  "get": function () {},
  "getBounds": function () {},
  "getDraggable": function () {},
  "getEditable": function () {},
  "getMap": function () {},
  "getVisible": function () {},
  "map_changed": function () {},
  "notify": function () {},
  "set": function () {},
  "setBounds": function () {},
  "setDraggable": function () {},
  "setEditable": function () {},
  "setMap": function () {},
  "setOptions": function () {},
  "setValues": function () {},
  "setVisible": function () {},
  "unbind": function () {},
  "unbindAll": function () {},
  "visible_changed": function () {}
};
google.maps.SaveWidget.prototype = {
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "constructor": function () {},
  "get": function () {},
  "getAttribution": function () {},
  "getPlace": function () {},
  "notify": function () {},
  "set": function () {},
  "setAttribution": function () {},
  "setOptions": function () {},
  "setPlace": function () {},
  "setValues": function () {},
  "unbind": function () {},
  "unbindAll": function () {}
};
google.maps.Size.prototype = {
  "ba": function () {},
  "equals": function () {},
  "toString": function () {}
};
google.maps.StreetViewCoverageLayer.prototype = {
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "constructor": function () {},
  "get": function () {},
  "getMap": function () {},
  "map_changed": function () {},
  "notify": function () {},
  "set": function () {},
  "setMap": function () {},
  "setOptions": function () {},
  "setValues": function () {},
  "unbind": function () {},
  "unbindAll": function () {}
};
google.maps.StreetViewPanorama.prototype = {
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "constructor": function () {},
  "get": function () {},
  "getEnableCloseButton": function () {},
  "getLinks": function () {},
  "getLocation": function () {},
  "getMotionTracking": function () {},
  "getPano": function () {},
  "getPhotographerPov": function () {},
  "getPosition": function () {},
  "getPov": function () {},
  "getStatus": function () {},
  "getVisible": function () {},
  "getZoom": function () {},
  "notify": function () {},
  "registerPanoProvider": function () {},
  "set": function () {},
  "setEnableCloseButton": function () {},
  "setLinks": function () {},
  "setMotionTracking": function () {},
  "setOptions": function () {},
  "setPano": function () {},
  "setPosition": function () {},
  "setPov": function () {},
  "setValues": function () {},
  "setVisible": function () {},
  "setZoom": function () {},
  "unbind": function () {},
  "unbindAll": function () {},
  "visible_changed": function () {}
};
google.maps.StreetViewPanorama.Cb.constructor.prototype = {
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "constructor": function () {},
  "get": function () {},
  "notify": function () {},
  "set": function () {},
  "setOptions": function () {},
  "setValues": function () {},
  "unbind": function () {},
  "unbindAll": function () {}
};
google.maps.StreetViewService.prototype = {
  "getPanorama": function () {},
  "getPanoramaById": function () {},
  "getPanoramaByLocation": function () {}
};
google.maps.StyledMapType.prototype = {
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "constructor": function () {},
  "get": function () {},
  "getTile": function () {},
  "notify": function () {},
  "set": function () {},
  "setOptions": function () {},
  "setValues": function () {},
  "tileSize": function () {},
  "triggersTileLoadEvent": function () {},
  "unbind": function () {},
  "unbindAll": function () {}
};
google.maps.StyledMapType.Cb.constructor.prototype = {
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "constructor": function () {},
  "get": function () {},
  "getTile": function () {},
  "notify": function () {},
  "set": function () {},
  "setOptions": function () {},
  "setValues": function () {},
  "tileSize": function () {},
  "triggersTileLoadEvent": function () {},
  "unbind": function () {},
  "unbindAll": function () {}
};
google.maps.TrafficLayer.prototype = {
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "constructor": function () {},
  "get": function () {},
  "getMap": function () {},
  "notify": function () {},
  "set": function () {},
  "setMap": function () {},
  "setOptions": function () {},
  "setValues": function () {},
  "unbind": function () {},
  "unbindAll": function () {}
};
google.maps.TransitLayer.prototype = {
  "addListener": function () {},
  "bindTo": function () {},
  "changed": function () {},
  "constructor": function () {},
  "get": function () {},
  "getMap": function () {},
  "notify": function () {},
  "set": function () {},
  "setMap": function () {},
  "setOptions": function () {},
  "setValues": function () {},
  "unbind": function () {},
  "unbindAll": function () {}
};
/**********************************************************************
 * End Generated Extern for google
/**********************************************************************/
